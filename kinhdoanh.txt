#include<iostream>
using namespace std;
int T[100005];
int D[100005];
void swap(int i, int j)
{
	int tmpt = T[i];
	T[i] = T[j];
	T[j] = tmpt;
	tmpt = D[i];
	D[i] = D[j];
	D[j] = tmpt;
}
void quickSort(int l, int r)
{
	int pivot = T[(l + r) / 2];
	int i = l;
	int j = r;
	while (i <= j)
	{
		while (T[i] < pivot) i++;
		while (T[j] > pivot)j--;
		if (i <= j)
		{
			swap(i, j);
			i++; j--;
		}
	}
	if (l < j) quickSort(l, j);
	if (r > i)quickSort(i, r);
}
void bubbleSort(int n)
{
	for (int i = n-1; i > 0; i--)
	{
		for (int j = i -1; j >= 0; j--)
		{
			if (D[i] < D[j])
			{
				swap(i,j);
			}
		}
	}
}
int main()
{
	//freopen("input.txt", "r", stdin);
	int n, t;
	cin >> n;
	for (int i = 0; i < n; i++)
	{
		cin >> T[i];
	}
	for (int i = 0; i < n; i++)
	{
		cin >> t;
		D[i] = T[i] + t;
	}
	int start = 0, current = 1, res = 1;
	quickSort(0, n - 1);
	bubbleSort(n);
	while (current<n)
	{
		if (T[current] >= D[start]) start++;
		else
		{
			res += 1;
		}
		current++;
	}
	cout << res << endl;
	return 0;
}